#!/usr/bin/env python3

import os

import requests

MOVISTAR_API_ROOT = "https://mi.movistar.com.ar/"


def get_token(numero):
    headers = {
        "x-requested-with": "com.services.movistar.ar",
        "Content-Type": "application/x-www-form-urlencoded"
    }

    data = {
        "grant_type": "mobile",
        "username": numero,
        "client_id": "appcontainer",
        "client_secret": "YXBwY29udGFpbmVy"
    }

    r = requests.post(
        url=MOVISTAR_API_ROOT + "oauth/token",
        headers=headers,
        data=data
    )
    #
    # print(r.url)
    # print(r.headers)
    #
    # print(r.text)

    if r.status_code == requests.codes.ok:

        parsed_response = r.json()

        token = parsed_response["access_token"]

        print("Token: %s" % token)

        return token

    else:
        print("Error 1")


def get_periodos(token):
    headers = {
        "Authorization": "Bearer %s" % token,
        "Content-Type": "application/x-www-form-urlencoded"
    }

    r = requests.get(MOVISTAR_API_ROOT + "v1/facturacion/periodos", headers=headers)

    if r.status_code != requests.codes.ok:
        print("Error al descargar los periodos")
        return None

    periodos = r.json()["data"]

    fechas = [p["date"] for p in periodos]

    print("Encontradas facturas para fechas :" + str(fechas))

    return fechas


def save_image(r, filename):
    print("Saving image to: %s" % filename)

    with open(filename, 'wb') as fd:
        for chunk in r.iter_content(128):
            fd.write(chunk)


def descargar_factura(fecha, token, root):
    headers = {
        "Authorization": "Bearer %s" % token,
        "Content-Type": "application/x-www-form-urlencoded"
    }

    #url = MOVISTAR_API_ROOT + "v1/facturacion/resumen/" + fecha + "/paginas"
    #print("Requesting: %s" % url)
    #r = requests.get(url, headers=headers)

    #paginas_resumen = r.json()["data"]

    #url = MOVISTAR_API_ROOT + "v1/facturacion/comprobante/" + fecha + "/paginas"
    #print("Requesting: %s" % url)
    # r = requests.get(url, headers=headers)

    # paginas_comprobante = r.json()["data"]

    path = os.path.join(root, fecha)

    print("Creating folder: %s" % path)

    if not os.path.exists(path):
        os.makedirs(path)

    # for i in range(0, int(paginas_resumen)):
    #     url = MOVISTAR_API_ROOT + "v1/facturacion/resumen/" + fecha + "/jpeg/" + str(i)
    #     print("Requesting: %s" % url)
    #     r = requests.get(url,
    #                      headers=headers,
    #                      stream=True)
    #     save_image(r, os.path.join(path, "resumen" + str(i) + ".jpg"))
    #
    # for i in range(0, int(paginas_comprobante)):
    #     url = MOVISTAR_API_ROOT + "v1/facturacion/comprobante/" + fecha + "/jpeg/" + str(i)
    #     print("Requesting: %s" % url)
    #     r = requests.get(url,
    #                      headers=headers,
    #                      stream=True)
    #     save_image(r, os.path.join(path, "comprobante" + str(i) + ".jpg"))

    url = MOVISTAR_API_ROOT + "v1/facturacion/comprobante/" + fecha + "/pdf/"
    print("Requesting: %s" % url)
    r = requests.get(url,
                     headers=headers,
                     stream=True)
    save_image(r, os.path.join(path, "comprobante" + ".pdf"))

    url = MOVISTAR_API_ROOT + "v1/facturacion/resumen/" + fecha + "/pdf/"
    print("Requesting: %s" % url)
    r = requests.get(url,
                     headers=headers,
                     stream=True)
    save_image(r, os.path.join(path, "resumen" + ".pdf"))


def main():
    telefono = input("Ingrese el numero de telefono: ")

    root = os.path.join(os.path.dirname(__file__), telefono)

    token = get_token(telefono)

    periodos = get_periodos(token)

    if periodos is None:
        return

    for periodo in periodos:
        try:
            descargar_factura(periodo, token, root)
        except:
            print("Error al descargar la factura del periodo: %s" % periodo)


if __name__ == "__main__":
    main()
